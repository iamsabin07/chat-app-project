{"ast":null,"code":"var _jsxFileName = \"/Users/sabinthapa/Desktop/chat-app-project/src/components/ChatFeed.jsx\";\nimport React from \"react\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage.jsx';\nimport TheirMessage from './TheirMessage.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    return chat.people.map((person, index) => {\n      var _person$person;\n\n      return person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-receipt\",\n        style: {\n          float: isMyMessage ? 'right' : 'left',\n          backgroundImage: `url(${person === null || person === void 0 ? void 0 : (_person$person = person.person) === null || _person$person === void 0 ? void 0 : _person$person.avatar})`\n        }\n      }, `read_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: renderReadReceipts(message, isMyMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  if (!chat) return 'Loading ...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classNAme: \"chat-subtitle\",\n        children: chat.people.map(person => `${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/chat-app-project/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage.jsx';\nimport TheirMessage from './TheirMessage.jsx';\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages} = props;\n\n    const chat = chats && chats[activeChat];\n\n    const renderReadReceipts = (message, isMyMessage) => {\n        return chat.people.map((person, index) => person.last_read === message.id && (\n            <div \n                key = {`read_${index}`}\n                className = \"read-receipt\"\n                style={{\n                    float : isMyMessage ? 'right' : 'left',\n                    backgroundImage : `url(${person?.person?.avatar})`\n                }}\n            />\n        ))\n    }\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n        return keys.map((key,index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index -1];\n            const isMyMessage = userName === message.sender.username;\n            \n            return (\n                <div key={`msg_${index}`} style = {{width: '100%'}}>\n                    <div className = \"message-block\">\n                    {\n                        isMyMessage \n                        ? <MyMessage message={message} /> \n                        : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\n                    }\n                    </div>  \n\n                    <div className = \"read-receipts\" style ={{marginRight: isMyMessage ? '18px': '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>  \n                </div>\n            );\n\n        })\n    }\n\n    if(!chat) return 'Loading ...';\n    \n    return (\n        <div className = \"chat-feed\">\n            <div className = \"chat-title-container\">\n                <div className =\"chat-title\">{chat.title}</div>\n                <div classNAme = \"chat-subtitle\">\n                    {chat.people.map((person) =>  `${person.person.username}`)}\n                </div>\n            </div> \n            {renderMessages()}\n            <div style ={{ height: '100px'}}/>\n            <div className = \"message-form-container\">\n                <MessageForm {...props} chatId ={activeChat} />    \n            </div>\n        </div>\n    );\n}\n\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}
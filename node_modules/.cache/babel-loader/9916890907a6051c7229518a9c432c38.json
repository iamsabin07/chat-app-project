{"ast":null,"code":"import _objectSpread from\"/Users/sabinthapa/Desktop/chat-app-project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import MessageForm from'./MessageForm';import MyMessage from'./MyMessage.jsx';import TheirMessage from'./TheirMessage.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatFeed=function ChatFeed(props){var chats=props.chats,activeChat=props.activeChat,userName=props.userName,messages=props.messages;var chat=chats&&chats[activeChat];var renderReadReceipts=function renderReadReceipts(message,isMyMessage){return chat.people.map(function(person,index){var _person$person;return person.last_read===message.id&&/*#__PURE__*/_jsx(\"div\",{className:\"read-receipt\",style:{backgroundImage:\"url(\".concat(person===null||person===void 0?void 0:(_person$person=person.person)===null||_person$person===void 0?void 0:_person$person.avatar,\")\"),float:isMyMessage?'right':'left'}},\"read_\".concat(index));});};var renderMessages=function renderMessages(){var keys=Object.keys(messages);return keys.map(function(key,index){var message=messages[key];var lastMessageKey=index===0?null:keys[index-1];var isMyMessage=userName===message.sender.username;return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-block\",children:isMyMessage?/*#__PURE__*/_jsx(MyMessage,{message:message}):/*#__PURE__*/_jsx(TheirMessage,{message:message,lastMessage:messages[lastMessageKey]})}),/*#__PURE__*/_jsx(\"div\",{className:\"read-receipts\",style:{marginRight:isMyMessage?'18px':'0px',marginLeft:isMyMessage?'0px':'68px'},children:renderReadReceipts(message,isMyMessage)})]},\"msg_\".concat(index));});};if(!chat)return'Loading ...';return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",children:chat.title}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-subtitle\",children:chat.people.map(function(person){return\"\".concat(person.person.username);})})]}),renderMessages(),/*#__PURE__*/_jsx(\"div\",{style:{height:'100px'}}),/*#__PURE__*/_jsx(\"div\",{className:\"message-form-container\",children:/*#__PURE__*/_jsx(MessageForm,_objectSpread(_objectSpread({},props),{},{chatId:activeChat}))})]});};export default ChatFeed;","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/chat-app-project/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","backgroundImage","avatar","float","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage.jsx';\nimport TheirMessage from './TheirMessage.jsx';\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages} = props;\n\n    const chat = chats && chats[activeChat];\n\n    const renderReadReceipts = (message, isMyMessage) => {\n       return chat.people.map((person, index) => person.last_read === message.id && (\n            <div \n                key = {`read_${index}`}\n                className = \"read-receipt\"\n                style={{\n                    backgroundImage : `url(${person?.person?.avatar})`,\n                    float : isMyMessage ? 'right' : 'left'\n                    \n                }}\n            />\n        ))\n    }\n    \n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n        return keys.map((key,index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\n            const isMyMessage = userName === message.sender.username;\n            \n            return (\n                <div key={`msg_${index}`} style = {{width: '100%'}}>\n                    <div className = \"message-block\">\n                    {\n                        isMyMessage \n                        ? <MyMessage message={message} /> \n                        : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\n                    }\n                    </div>  \n\n                    <div className = \"read-receipts\" style ={{marginRight: isMyMessage ? '18px': '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>  \n                </div>\n            );\n\n        })\n    }\n\n    if(!chat) return 'Loading ...';\n    \n    return (\n        <div className = \"chat-feed\">\n            <div className = \"chat-title-container\">\n                <div className =\"chat-title\">{chat.title}</div>\n                <div className = \"chat-subtitle\">\n                    {chat.people.map((person) =>  `${person.person.username}`)}\n                </div>\n            </div> \n            {renderMessages()}\n            <div style ={{ height: '100px'}}/>\n            <div className = \"message-form-container\">\n                <MessageForm {...props} chatId ={activeChat} />    \n            </div>\n        </div>\n    );\n}\n\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}